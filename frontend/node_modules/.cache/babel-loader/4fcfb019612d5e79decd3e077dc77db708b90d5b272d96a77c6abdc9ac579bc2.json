{"ast":null,"code":"import { ExternalInteractorBase } from \"tsparticles-engine\";\nimport { Remove } from \"./Options/Classes/Remove\";\nexport class Remover extends ExternalInteractorBase {\n  constructor(container) {\n    super(container);\n    this.handleClickMode = mode => {\n      const container = this.container,\n        options = container.actualOptions;\n      if (!options.interactivity.modes.remove || mode !== \"remove\") {\n        return;\n      }\n      const removeNb = options.interactivity.modes.remove.quantity;\n      container.particles.removeQuantity(removeNb);\n    };\n  }\n  clear() {}\n  init() {}\n  async interact() {}\n  isEnabled() {\n    return true;\n  }\n  loadModeOptions(options) {\n    if (!options.remove) {\n      options.remove = new Remove();\n    }\n    for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      sources[_key - 1] = arguments[_key];\n    }\n    for (const source of sources) {\n      options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\n    }\n  }\n  reset() {}\n}","map":{"version":3,"names":["ExternalInteractorBase","Remove","Remover","constructor","container","handleClickMode","mode","options","actualOptions","interactivity","modes","remove","removeNb","quantity","particles","removeQuantity","clear","init","interact","isEnabled","loadModeOptions","_len","arguments","length","sources","Array","_key","source","load","reset"],"sources":["C:/Users/tejas/OneDrive/Desktop/face-recognition/frontend/node_modules/tsparticles-interaction-external-remove/esm/Remover.js"],"sourcesContent":["import { ExternalInteractorBase } from \"tsparticles-engine\";\r\nimport { Remove } from \"./Options/Classes/Remove\";\r\nexport class Remover extends ExternalInteractorBase {\r\n    constructor(container) {\r\n        super(container);\r\n        this.handleClickMode = (mode) => {\r\n            const container = this.container, options = container.actualOptions;\r\n            if (!options.interactivity.modes.remove || mode !== \"remove\") {\r\n                return;\r\n            }\r\n            const removeNb = options.interactivity.modes.remove.quantity;\r\n            container.particles.removeQuantity(removeNb);\r\n        };\r\n    }\r\n    clear() {\r\n    }\r\n    init() {\r\n    }\r\n    async interact() {\r\n    }\r\n    isEnabled() {\r\n        return true;\r\n    }\r\n    loadModeOptions(options, ...sources) {\r\n        if (!options.remove) {\r\n            options.remove = new Remove();\r\n        }\r\n        for (const source of sources) {\r\n            options.remove.load(source === null || source === void 0 ? void 0 : source.remove);\r\n        }\r\n    }\r\n    reset() {\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,oBAAoB;AAC3D,SAASC,MAAM,QAAQ,0BAA0B;AACjD,OAAO,MAAMC,OAAO,SAASF,sBAAsB,CAAC;EAChDG,WAAWA,CAACC,SAAS,EAAE;IACnB,KAAK,CAACA,SAAS,CAAC;IAChB,IAAI,CAACC,eAAe,GAAIC,IAAI,IAAK;MAC7B,MAAMF,SAAS,GAAG,IAAI,CAACA,SAAS;QAAEG,OAAO,GAAGH,SAAS,CAACI,aAAa;MACnE,IAAI,CAACD,OAAO,CAACE,aAAa,CAACC,KAAK,CAACC,MAAM,IAAIL,IAAI,KAAK,QAAQ,EAAE;QAC1D;MACJ;MACA,MAAMM,QAAQ,GAAGL,OAAO,CAACE,aAAa,CAACC,KAAK,CAACC,MAAM,CAACE,QAAQ;MAC5DT,SAAS,CAACU,SAAS,CAACC,cAAc,CAACH,QAAQ,CAAC;IAChD,CAAC;EACL;EACAI,KAAKA,CAAA,EAAG,CACR;EACAC,IAAIA,CAAA,EAAG,CACP;EACA,MAAMC,QAAQA,CAAA,EAAG,CACjB;EACAC,SAASA,CAAA,EAAG;IACR,OAAO,IAAI;EACf;EACAC,eAAeA,CAACb,OAAO,EAAc;IACjC,IAAI,CAACA,OAAO,CAACI,MAAM,EAAE;MACjBJ,OAAO,CAACI,MAAM,GAAG,IAAIV,MAAM,CAAC,CAAC;IACjC;IAAC,SAAAoB,IAAA,GAAAC,SAAA,CAAAC,MAAA,EAHuBC,OAAO,OAAAC,KAAA,CAAAJ,IAAA,OAAAA,IAAA,WAAAK,IAAA,MAAAA,IAAA,GAAAL,IAAA,EAAAK,IAAA;MAAPF,OAAO,CAAAE,IAAA,QAAAJ,SAAA,CAAAI,IAAA;IAAA;IAI/B,KAAK,MAAMC,MAAM,IAAIH,OAAO,EAAE;MAC1BjB,OAAO,CAACI,MAAM,CAACiB,IAAI,CAACD,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,MAAM,CAAChB,MAAM,CAAC;IACtF;EACJ;EACAkB,KAAKA,CAAA,EAAG,CACR;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}