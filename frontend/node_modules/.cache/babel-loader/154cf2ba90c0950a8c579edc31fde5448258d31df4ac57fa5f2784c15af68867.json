{"ast":null,"code":"var _jsxFileName = \"/home/kashyap_sri/Desktop/Shreyas/face-recognition/frontend/src/Components/faceRecognition.js\",\n  _s = $RefreshSig$();\nimport react from 'react';\nimport { useState } from 'react';\n// import axios from 'axios'\nimport Particle from \"./Particles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FaceRecognittion() {\n  _s();\n  const [image, setImage] = useState(\"\");\n  const [exsists, setExsits] = useState(false);\n  function convert(e) {\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n    reader.onload = () => {\n      console.log(reader.result);\n      setImage(reader.result);\n      setExsits(prev => !prev);\n    };\n    reader.onerror = error => {\n      console.log(\"ERROR \", error);\n    };\n  }\n  function handleSubmit() {\n    const obj = {\n      contentType: \"w\",\n      Data: image\n    };\n    console.log(\"Submitted and cool animation plays\");\n    // axios.post('http://localhost:8080/images/add', obj)\n    //   .then(res => { console.log(res) })\n    //   .catch(err => console.log(err));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Particle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"face-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contents\",\n        children: [exsists && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"preview\",\n            src: image,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 23\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            action: \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"inp\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"inp\",\n              type: \"file\",\n              accept: \"image/\",\n              onChange: convert,\n              placeholder: \"Your first name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: handleSubmit,\n              children: \"submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_s(FaceRecognittion, \"prwR4Uiakmv/SmC+NpRuCXfqHcs=\");\n_c = FaceRecognittion;\nvar _c;\n$RefreshReg$(_c, \"FaceRecognittion\");","map":{"version":3,"names":["react","useState","Particle","jsxDEV","_jsxDEV","FaceRecognittion","_s","image","setImage","exsists","setExsits","convert","e","reader","FileReader","readAsDataURL","target","files","onload","console","log","result","prev","onerror","error","handleSubmit","obj","contentType","Data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","action","htmlFor","id","type","accept","onChange","placeholder","onClick","_c","$RefreshReg$"],"sources":["/home/kashyap_sri/Desktop/Shreyas/face-recognition/frontend/src/Components/faceRecognition.js"],"sourcesContent":["import react from 'react'\nimport { useState } from 'react'\n// import axios from 'axios'\nimport Particle from \"./Particles\"\nexport default function FaceRecognittion() {\n  const [image, setImage] = useState(\"\")\n  const [exsists, setExsits] = useState(false)\n\n  function convert(e) {\n    var reader = new FileReader();\n    reader.readAsDataURL(e.target.files[0]);\n    reader.onload = () => {\n      console.log(reader.result)\n      setImage(reader.result)\n      setExsits(prev => !prev)\n    }\n    reader.onerror = error => {\n      console.log(\"ERROR \", error)\n    }\n  }\n  function handleSubmit() {\n    const obj = {\n      contentType: \"w\",\n      Data: image,\n    }\n    console.log(\"Submitted and cool animation plays\")\n    // axios.post('http://localhost:8080/images/add', obj)\n    //   .then(res => { console.log(res) })\n    //   .catch(err => console.log(err));\n  }\n  return (\n    <div>\n      <Particle />\n      <div className='face-container'>\n        <div className='contents'>\n          {exsists && <div className=\"img-container\">\n            <img className=\"preview\" src={image} alt=\"\" />\n          </div>}\n\n\n          <div>\n            <form action=\"\">\n            <label htmlFor=\"inp\"></label>\n              <input id=\"inp\" type=\"file\"\n                accept=\"image/\"\n                onChange={convert} \n                placeholder=\"Your first name\"/>\n              <button onClick={handleSubmit}>submit</button>\n            </form>\n          </div>\n        </div>\n      </div>\n\n\n    </div>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}